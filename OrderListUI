//Includes Sample Data to show filtering capabilities

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Orders Dashboard</title>
<style>
    /* Basic styling for the table */
    table {
        width: 100%;
        border-collapse: collapse;
    }
    th, td {
        padding: 8px;
        border-bottom: 1px solid #ddd;
        text-align: left;
    }
    th {
        background-color: #f2f2f2;
    }
    /* Styling for sorting buttons */
    .sort-btn {
        cursor: pointer;
        border: none;
        background-color: transparent;
    }
</style>
</head>
<body>
<div id="orders-table">
    <table>
        <thead>
            <tr>
                <th><button class="sort-btn" onclick="sortTable(0)">Order ID ▼</button></th>
                <th>Customer Name</th>
                <th><button class="sort-btn" onclick="sortTable(2)">Amount Paid ▲</button></th>
                <th><button class="sort-btn" onclick="sortTable(3)">Payment Status ▲</button></th>
            </tr>
        </thead>
        <tbody>
            <!-- Table body content will be dynamically generated by JavaScript -->
        </tbody>
    </table>
</div>
<!-- Filter inputs -->
<div>
    <label for="order-id-filter">Order ID:</label>
    <input type="text" id="order-id-filter">
    <label for="amount-paid-filter">Amount Paid:</label>
    <input type="number" id="amount-paid-filter">
    <label for="payment-status-filter">Payment Status:</label>
    <select id="payment-status-filter">
        <option value="All">All</option>
        <option value="Paid">Paid</option>
        <option value="Pending">Pending</option>
    </select>
</div>


<script>
// Sample data for orders
var orders = [
    { orderId: '001', customerName: 'John Doe', amountPaid: 150.00, paymentStatus: 'Paid' },
    { orderId: '002', customerName: 'Jane Smith', amountPaid: 200.00, paymentStatus: 'Pending' },
    { orderId: '003', customerName: 'Alex Johnson', amountPaid: 100.00, paymentStatus: 'Paid' },
    { orderId: '004', customerName: 'Emily Brown', amountPaid: 180.00, paymentStatus: 'Paid' },
    { orderId: '005', customerName: 'Michael Lee', amountPaid: 220.00, paymentStatus: 'Pending' }
];

// Function to render orders table
function renderOrdersTable(ordersData) {
    var tableBody = document.querySelector('#orders-table tbody');
    tableBody.innerHTML = '';
    ordersData.forEach(function(order) {
        var row = document.createElement('tr');
        row.innerHTML = `
            <td>${order.orderId}</td>
            <td>${order.customerName}</td>
            <td>$${order.amountPaid.toFixed(2)}</td>
            <td>${order.paymentStatus}</td>
        `;
        tableBody.appendChild(row);
    });
}

// Initial rendering of orders table
renderOrdersTable(orders);

// Function to filter orders based on criteria
function filterOrders() {
    var orderIdFilter = document.querySelector('#order-id-filter').value.trim();
    var amountPaidFilter = parseFloat(document.querySelector('#amount-paid-filter').value.trim());
    var paymentStatusFilter = document.querySelector('#payment-status-filter').value.trim();

    var filteredOrders = orders.filter(function(order) {
        return (order.orderId.includes(orderIdFilter) &&
                (isNaN(amountPaidFilter) || order.amountPaid === amountPaidFilter) &&
                (paymentStatusFilter === 'All' || order.paymentStatus === paymentStatusFilter));
    });

    renderOrdersTable(filteredOrders);
}

// Event listeners for filter inputs
document.querySelector('#order-id-filter').addEventListener('input', filterOrders);
document.querySelector('#amount-paid-filter').addEventListener('input', filterOrders);
document.querySelector('#payment-status-filter').addEventListener('change', filterOrders);

</script>

</body>
</html>
