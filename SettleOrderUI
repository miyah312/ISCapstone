<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Settle Order</title>
<style>
    /* Basic styling for the form */
    .container {
        max-width: 400px;
        margin: 50px auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
    }
    label {
        display: block;
        margin-bottom: 5px;
    }
    input[type="text"], input[type="number"] {
        width: 100%;
        padding: 8px;
        margin-bottom: 10px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
    button {
        background-color: #4CAF50;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }
    button:hover {
        background-color: #45a049;
    }
</style>
</head>
<body>
<div class="container">
    <h2>Settle Order</h2>
    <form id="settle-order-form">
        <label for="order-id">Order ID:</label>
        <input type="text" id="order-id" required>
        <label for="final-amount">Final Amount:</label>
        <input type="number" id="final-amount" required>
        <button type="submit">Settle Order</button>
    </form>
    <div id="result"></div>
</div>

<script>
    var orders = [
        { orderId: '001', customerName: 'John Doe', amountPaid: 150.00, paymentStatus: 'Paid' },
        { orderId: '002', customerName: 'Jane Smith', amountPaid: 200.00, paymentStatus: 'Pending' },
        { orderId: '003', customerName: 'Alex Johnson', amountPaid: 100.00, paymentStatus: 'Paid' },
        { orderId: '004', customerName: 'Emily Brown', amountPaid: 180.00, paymentStatus: 'Paid' },
        { orderId: '005', customerName: 'Michael Lee', amountPaid: 220.00, paymentStatus: 'Pending' },
        { orderId: '006', customerName: 'Sophia Rodriguez', amountPaid: 0.00, paymentStatus: 'Payment Unauthorized' }
    ];

    // Predefined list of valid orders
    var validOrders = orders.map(order => order.orderId);

    document.getElementById('settle-order-form').addEventListener('submit', function(event) {
        event.preventDefault();

        var orderId = document.getElementById('order-id').value.trim();
        var finalAmount = parseFloat(document.getElementById('final-amount').value.trim());

        if (validOrders.includes(orderId)) {
            // If the Order ID is valid, proceed with settlement
            var settlementResult = settleOrder(orderId, finalAmount);
            var resultElement = document.getElementById('result');
            resultElement.textContent = settlementResult;
        } else {
            // If the Order ID is not valid, display an error message
            var resultElement = document.getElementById('result');
            resultElement.textContent = 'Error: Invalid Order ID';
        }
    });

    function settleOrder(orderId, finalAmount) {
        // Find the order details
        var order = orders.find(order => order.orderId === orderId);

        if (finalAmount <= order.amountPaid) {
            // If the final amount is less than or equal to the authorized payment
            return `Payment authorized for Order ${orderId}. Final amount: $${finalAmount.toFixed(2)}`;
        } else {
            // If the final amount is more than the authorized payment
            return 'Final Amount is higher than authorized payment';
        }
    }
</script>

</body>
</html>
